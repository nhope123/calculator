{"version":3,"sources":["helpers/calculation.ts","contexts/CalculatorContext.tsx","components/Display.tsx","components/ButtonSet.tsx","components/KeyPad.tsx","components/Calculator.tsx","index.js"],"names":["symbols","defaultState","result","equation","CalculatorContext","createContext","CalculatorContextProvider","props","useState","data","setData","Provider","value","setButtonInput","input","stateValues","includes","newEquation","split","filter","sign","length","slice","solution","evaluate","toString","console","log","processEqualSign","processPeriod","processNumber","noSymbols","processSigns","children","useStyles","makeStyles","theme","body","backgroundColor","borderRadius","border","marginBottom","padding","maxWidth","overflowX","scrollbarColor","text","textAlign","fontWeight","Display","classes","useContext","Box","className","Typography","id","minWidth","common","boxSizing","margin","boxShadow","regular","width","height","vertical","horizontal","reset","color","number","ButtonSet","content","map","element","propsStyle","propsColor","Button","component","clsx","variant","key","onClick","tabIndex","buttonValues","topRow","commonRow","display","flexDirection","justifyContent","KeyPad","Grid","main","alignItems","footer","marginTop","icon","fontStyle","Calculator","p","m","IconButton","href","title","target","rel","createTheme","palette","primary","ReactDOM","render","CssBaseline","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d65447a8.chunk.js","sourcesContent":["import {evaluate} from 'mathjs'\nimport { CalculatorState } from '../contexts/CalculatorContext'\n\nconst symbols = ['/','*','-','+']\n\nexport const processNumber = ( stateValues: CalculatorState,input: string ): CalculatorState => {\n  const {result, equation} = stateValues\n\n  const [resultData, equationValue] = (equation.includes('='))? [input,input] :\n                                      (symbols.includes(result[result.length -1 ] ))? \n                                        [input, equation + input]:\n                                      (result === '0')? \n                                        [input, equation.slice(0,equation.length -1) + input]: \n                                        [result + input, equation + input]\n  return {result: resultData, equation: equationValue }  \n}\n\nexport  const processPeriod = ( stateValues: CalculatorState,input: string ): CalculatorState => {\n  const {result, equation} = stateValues\n\n  return (result.split('').filter(sign => symbols.includes(sign)).length !== 0 )? \n          ({result:'0.', equation: equation + '0.'}) : \n            (result.includes('.'))?\n              ({result, equation}):\n                ({result: result + '.' , equation: equation + '.'})\n}\n\nexport const processSigns = ( stateValues: CalculatorState, input: string ): CalculatorState => {\n  const {result, equation} = stateValues\n\n  const noSymbols = (result.split('').filter(sign => symbols.includes(sign)).length === 0) \n\n  const testResult = (input === '-' && result.length === 1 )? (result + input) : input\n  const testEquation = (equation.includes('='))? (result + input): \n                        ((result.length === 1 && input === '-') ||(noSymbols))? (equation + input):\n                        (result[result.length -1] === '.')? (equation + '0' + input):\n                        (equation.slice(0,(equation.length - result.length)) + input)\n\n  return({result: testResult, equation: testEquation})\n}\n\nexport const processEqualSign = ( stateValues: CalculatorState, input: string ): CalculatorState => {\n  const {result,equation} = stateValues\n\n  if( equation.includes('=')){return stateValues}\n  const newEquation = (result.split('').filter(sign => symbols.includes(sign)).length !== 0)?\n                    (equation.slice(0,(equation.length - result.length))): equation\n  const solution = evaluate(newEquation).toString()\n  console.log(solution);\n  \n  return ({\n    result: solution,\n    equation: newEquation + '=' + solution\n  })\n}","import React, { createContext, FC, useState } from 'react'\nimport { processEqualSign, processNumber, processPeriod, processSigns } from '../helpers/calculation'\n\ninterface CalculatorState{\n  result: string ,\n  equation: string\n}\n\ninterface ContextValues{\n  data: CalculatorState,\n  setButtonInput: (input: string | number) => void\n}\n\nconst defaultState = {result: '0', equation: '0'}\n\nconst CalculatorContext =  createContext<ContextValues>(null as never)\n\nconst CalculatorContextProvider: FC = (props) => {\n\n  const [data, setData] = useState<CalculatorState>(defaultState)\n\n  const setButtonInput = (input: string | number) =>{\n    setData(\n            (input === '=')? processEqualSign(data,input):\n              (input === 'C')? defaultState:\n                (input === '.')? processPeriod(data, input):\n                  (typeof input === 'number')? processNumber(data, input.toString()):\n                    processSigns(data, input.toString())\n    )    \n  }\n\n  return (\n    <CalculatorContext.Provider value={{\n      data,\n      setButtonInput\n    }} >\n      {props.children}\n    </CalculatorContext.Provider >\n  )\n}\n\nexport default CalculatorContext\nexport {\n  CalculatorContextProvider,\n}\nexport type {\n  CalculatorState\n}\n","import { Box, makeStyles, Typography } from '@material-ui/core'\nimport React, { FC, useContext } from 'react'\nimport CalculatorContext from '../contexts/CalculatorContext'\n\nconst useStyles = makeStyles((theme) => ({\n  body:{\n    backgroundColor: '#f2f2f3',\n    borderRadius: '6px',\n    border: '4px inset grey',\n    marginBottom: '20px',\n    padding: '8px 8px 4px',\n    maxWidth: '240px',\n    overflowX: 'scroll',  \n    scrollbarColor: '#d9d9d9 #f2f2f3', \n  },\n  text:{\n    textAlign: 'right',\n    fontWeight: 'bold',\n  }\n}))\n\nconst Display: FC = () => {  \n  const classes = useStyles()\n  const {data} = useContext(CalculatorContext)\n  return (\n    <Box className={classes.body} >\n      <Typography  className={classes.text} >{data?.equation}</Typography>\n      <Typography  className={classes.text}  id={'display'} >{data?.result}</Typography>\n    </Box>\n  )\n}\n\nexport default Display\n","import {Button, makeStyles, Typography } from '@material-ui/core'\nimport React, { FC, useContext } from 'react'\nimport CalculatorContext from '../contexts/CalculatorContext'\nimport clsx from 'clsx'\n\ninterface ButtonSetProps{\n  content: any[]\n}\nconst REGULAR_WIDTH = '50px'\n\nconst useStyles = makeStyles((theme) => ({\n  \"MuiButton-root\":{\n    minWidth: '0px',\n  },\n  common:{\n    boxSizing: 'border-box',\n    margin:'5px',\n    padding: '0',\n    border: '2px outset #4b4b4e',\n    borderRadius: '8px',\n    boxShadow: '2px 2px 4px grey',\n    '&:active':{\n      border: '3px inset #4b4b4e'\n    }\n  },\n  regular:{\n    width: REGULAR_WIDTH,\n    height: '56px',\n  },\n  vertical:{\n    width: REGULAR_WIDTH,\n  },\n  horizontal:{\n    height: '56px',\n    width: '110px',\n  },  \n  reset:{\n    backgroundColor: '#fd823f',\n    color: 'black',  \n    '&:hover':{\n      backgroundColor: '#fead81',\n    }  \n  },\n  text:{\n    fontWeight: 'bold',\n  },\n  sign:{\n    backgroundColor: '#295875',\n    color: 'white',\n    '&:hover':{\n      backgroundColor: '#428ebd'\n    }\n  },\n  number:{\n    backgroundColor: '#57575c',\n    color: 'white',\n    '&:hover':{\n      backgroundColor: '#898990',      \n    },\n    \n  }\n}))\n\n\nconst ButtonSet: FC<ButtonSetProps> = (props) => {\n\n  const classes = useStyles()\n  \n  const {setButtonInput} = useContext(CalculatorContext)\n  return (\n    < >\n        {\n          props.content.map(element =>{\n            const propsStyle = (element[2]=== 'regular')? classes.regular:\n                                (element[2]=== 'vertical')? classes.vertical: classes.horizontal\n            const propsColor = (element[3] === 'reset')?classes.reset:\n                                (element[3] === 'sign')?classes.sign: classes.number\n            return (\n              <Button component={'div'}\n                      className={clsx([propsStyle,propsColor,classes['MuiButton-root'], classes.common])}             \n                      variant={'contained'} \n                      key={element[1]} \n                      id={element[1]}\n                      onClick={()=>setButtonInput(element[0])} \n                      tabIndex={0} \n                      >\n                <Typography className={clsx([classes.text])}>{element[0]}</Typography>\n              </Button>\n            )\n          })\n        }\n      </>\n  )\n}\n\nexport default ButtonSet\n","import { Box, Grid, makeStyles } from '@material-ui/core'\nimport clsx from 'clsx'\nimport React, { FC} from 'react'\nimport ButtonSet from './ButtonSet'\n\nconst buttonValues = [\n  [\n    ['C','clear','regular','reset'],\n    ['/','divide','regular','sign'],\n    ['*','multiply','regular','sign'],\n    ['-','subtract','regular','sign']\n  ],\n  [\n    [7,'seven','regular','number'],\n    [8,'eight','regular','number'],\n    [9,'nine','regular','number'],\n    ['+','add','vertical','sign']\n  ],\n  [\n    [4,'four','regular','number'],\n    [5,'five','regular','number'],\n    [6,'six','regular','number']\n  ],\n  [\n    [1,'one','regular','number'],\n    [2,'two','regular','number'],\n    [3,'three','regular','number'],\n    ['=','equals','vertical','sign']\n  ],\n  [\n    [0,'zero','horizontal','number'],\n    ['.','decimal','regular','number']\n  ]\n]\n\nconst useStyles = makeStyles((theme) => ({\n  topRow:{\n    height: '65px',\n  },\n  commonRow:{\n    width: '100%',\n    display:'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  }\n}))\n\nconst KeyPad: FC = (props) => {\n\n  const classes = useStyles()\n\n  return (\n    <Box >\n      {/* Upper level button set */}\n      <Box className={clsx([classes.topRow,classes.commonRow])} >\n        <ButtonSet {...{content: buttonValues[0]}}   />\n      </Box >\n      {/* Middle level button set */}\n      <Box className={classes.commonRow}>\n        <Grid >\n          <ButtonSet {...{content: buttonValues[1].slice(0,3)}} />\n          <br/>\n          <ButtonSet {...{content: buttonValues[2].slice(0,3)}} />          \n        </Grid >        \n          <ButtonSet {...{content: buttonValues[1].slice(3)}} />        \n      </Box>\n      {/* Lower level button set */}\n      <Box className={classes.commonRow} >\n        <Grid  >\n          <ButtonSet {...{content: buttonValues[3].slice(0,3)}} />\n          <br/>\n          <ButtonSet {...{content: buttonValues[4].slice(0,2)}} />          \n        </Grid>\n        <ButtonSet {...{content: buttonValues[3].slice(3)}} />\n      </Box>\n    </Box >\n  )\n}\n\nexport default KeyPad\n","import { Box,IconButton, makeStyles, Typography } from '@material-ui/core'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport React, { FC } from 'react'\nimport Display from './Display'\nimport KeyPad from './KeyPad'\n\nconst useStyles = makeStyles((theme) => ({\n  main:{\n    backgroundColor: '#275f72',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  body:{\n    width: '273px',\n    backgroundColor: '#82cce9',\n    borderRadius: '10px',\n  },\n  footer:{\n    marginTop: '45px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  icon:{\n    color: 'white',\n    width: 'auto',\n  },\n  text:{\n    fontWeight: 'bold',\n    fontStyle: 'italic',\n  }\n}))\n\nconst Calculator: FC = (props) => {  \n  const classes = useStyles()\n  return (\n    <Box className={classes.main}>\n      <Box p={2} boxShadow={12} className={classes.body}>\n        <Display />\n        <KeyPad />\n      </Box >\n      <Box className={classes.footer} >\n        <Box m={3} >\n          <Typography className={classes.text}>{'by Nial'}</Typography>\n        </Box>\n        <IconButton  >\n        <a href=\"https://github.com/nhope123/calculator\" title='github repo' target='_top' rel=\"noopener noreferrer\" >\n          <GitHubIcon className={classes.icon} />\n        </a>\n        </IconButton>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Calculator\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './components/Calculator';\nimport { createTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { CalculatorContextProvider } from './contexts/CalculatorContext';\n\nconst theme = createTheme({\n  palette:{\n    primary:{\n      main: '#57575c',\n\n    }\n  }  \n})\n\nReactDOM.render(\n  <StrictMode >\n    <CssBaseline />\n      <ThemeProvider theme={theme} >\n        <CalculatorContextProvider >\n          < Calculator />\n        </CalculatorContextProvider>        \n      </ThemeProvider>    \n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}